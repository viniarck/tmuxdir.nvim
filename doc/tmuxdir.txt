*tmuxdir.txt* tmux session workspace plugin for nvim and vim.


CONTENTS						*tmuxdir-contents*

Introduction		|tmuxdir-introduction|
Install			|tmuxdir-install|
Interface		|tmuxdir-interface|
  Functions		  |tmuxdir-functions|
  Configuration Examples  |tmuxdir-examples|
Release Notes		|tmuxdir-release-notes|

==============================================================================
INTRODUCTION						*tmuxdir-introduction*

*tmuxdir* tmux session workspace plugin for nvim and vim.

==============================================================================
INSTALL							*tmuxdir-install*

Note: tmuxdir requires denite.nvim, pynvim, nvim 0.3+ or Vim8+ and Python3.6+.

tmuxdir.nvim was written primarily targeting nvim with its RPC interface. So,
to be compatible with Vim8+ nvim-yarp and vim-hug-neovim-rpc are needed.

If you use dein:
>
    call dein#add('viniarck/tmuxdir.nvim')
    if !has('nvim')
      call dein#add('roxma/nvim-yarp')
      call dein#add('roxma/vim-hug-neovim-rpc')
    endif
    call dein#add('Shougo/denite.nvim')
<

If you use vim-plug:
>
    if has('nvim')
      Plug 'viniarck/tmuxdir.nvim', { 'do': ':UpdateRemotePlugins' }
      Plug 'Shougo/denite.nvim'
    else
      Plug 'viniarck/tmuxdir.nvim'
      Plug 'roxma/nvim-yarp'
      Plug 'roxma/vim-hug-neovim-rpc'
    endif
      Plug 'Shougo/denite.nvim'
<

After installing, and restarting nvim/vim, you should be able invoke this function to confirm it's all set, you shouldn't see any errors being reported:

>
    :echo TmuxdirCheck()
<

Note: Make sure you have a recent version o pynvim
>
    pip3 install --user --upgrade pynvim
<

==============================================================================
INTERFACE						*tmuxdir-interface*

------------------------------------------------------------------------------
FUNCTIONS 						*tmuxdir-functions*


TmuxdirCheck()
		Check if tmuxdir has been installed correctly and if tmux is
		available in your bin PATH


TmuxdirAdd({arg})
		Add an {arg} directory to the project list. As long as this folder
		has a root marker it's going to show up in the project directories.

TmuxdirAddStatic({arg})
		Add an {arg} directory to the project list statically. It will
		be statically added regardless of root markers


TmuxdirClearAdded({arg})
		Remove an {arg} directory of the project list which has been added
		with TmuxdirAdd({arg}) or TmuxdirAddStatic({arg})


TmuxdirListAdded({arg})
		List all projects folders that have been either added by
		TmuxdirAdd({arg}) or TmuxdirAddStatic({arg})

TmuxdirClearAddedAll({arg})
		Remove all added projects by TmuxdirAdd({arg}) or TmuxdirAddStatic({arg})
		from the project list.

TmuxdirIgnore({arg})
		Ignore an {arg} directory of the project list. If it's ignored
		it won't show up in the project list anymore

TmuxdirClearIgnored({arg})
		Remove an {arg} directory of the project list which has been added
		with TmuxdirIgnore({arg})

TmuxdirListIgnored({arg})
		List all projects folders that have been ignored by TmuxdirIgnore({arg})


TmuxdirClearIgnoredAll({arg})
		Stop ignoring all projects that have been ignored



------------------------------------------------------------------------------
CONFIGURATION EXAMPLES 						*tmuxdir-examples*

Set of base directories to look for your projects:

>
  let g:tmuxdir_base_dirs = ['~/repos', '~/projects', '~/src']
<

Root markers to identify projects:

>
  let g:tmuxdir_root_markers = ['.git']


Eager mode, by default is v:false, in order to stop the recursion for each base dirs
as soon at a specific depth level (the maximum depth currently is 3) once a root marker is found. Most likely you won't have nested repos, so this will yield faster results. However, if you do have nested repos and want them to be found you want to set this as v:true:

>
  let g:tmuxdir_eager_mode = v:false


tmuxdir.nvim doesn't ship with any default key mappings, but the plugin's author uses these mappings:

>
    nnoremap <silent> <A-m>  :<C-u>Denite -start-filter tmux_session <cr>
    inoremap <silent> <A-m>  :<C-u>Denite -start-filter tmux_session <cr>
    tnoremap <silent> <A-m>  <C-\><C-n> :<C-u>Denite -start-filter tmux_session <cr>

    nnoremap <silent> <A-n>  :<C-u>Denite -start-filter tmux_dir <cr>
    inoremap <silent> <A-n>  :<C-u>Denite -start-filter tmux_dir <cr>
    tnoremap <silent> <A-n>  <C-\><C-n> :<C-u>Denite -start-filter tmux_dir <cr>
<


==============================================================================
RELEASE NOTES						*tmuxdir-release-notes*

2020-03-25 Released v1.0 with documentation.
2020-08-02 Released g:tmuxdir_eager_mode option set as v:false

On my machine, with g:tmuxdir_eager_mode it resulted in a 5x speed up:

----------------------------------------------------------------------------------------- benchmark: 2 tests -----------------------------------------------------------------------------
-----------
Name (time in ms)                        Min                Max               Mean            StdDev             Median               IQR            Outliers       OPS            Rounds
 Iterations
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------
test_find_projects_v11_not_eager      3.4188 (1.0)       4.3634 (1.0)       3.5153 (1.0)      0.0992 (1.0)       3.4894 (1.0)      0.0593 (1.0)         21;20  284.4703 (1.0)         274
          1
test_find_projects_v10_eager         19.3482 (5.66)     20.1614 (4.62)     19.6167 (5.58)     0.1954 (1.97)     19.5694 (5.61)     0.2906 (4.90)         14;0   50.9769 (0.18)         50
          1
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-----------

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:noet:
